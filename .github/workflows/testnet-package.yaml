name: Build and Deploy

on:
  workflow_dispatch:
    inputs:
      servicename:
        description: 'Select service to build and deploy'
        required: true
        default: 'PointsServer-Silo'
        type: choice
        options:
          - PointsServer.Silo
          - PointsServer.EntityEventHandler
          - PointsServer.AuthServer
          - PointsServer.HttpApi.Host
          - PointsServer.DbMigrator
env:
  DOTNET_INSTALL_DIR: "./.dotnet"

jobs:
  publish:
    runs-on: pixiepoints-runner
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '7.0'
      - run: dotnet publish src/${{ github.event.inputs.servicename}}/${{ github.event.inputs.servicename }}.csproj -o out/${{ github.event.inputs.servicename }}
      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.event.inputs.servicename }}
          path: out/${{ github.event.inputs.servicename }}
          retention-days: 1
  
  build-and-push-image:
    needs: publish
    runs-on: pixiepoints-runner
    permissions:
      contents: read
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set short git commit SHA
        id: vars
        run: |
          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "short_sha=$calculatedSha" >> "$GITHUB_OUTPUT"
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ github.event.inputs.servicename }}
          path: out/${{ github.event.inputs.servicename }}
      - name: Create image tag
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.REPOSITORY_REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.REPOSITORY }}/${{ github.event.inputs.servicename }}
          tags: |
            type=sha

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          build-args: |
            servicename=${{ github.event.inputs.servicename }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
  dispatch:
    runs-on: pixiepoints-runner
    needs: build-and-push-image
    steps:
      - name: Map servicename to appName
        id: map-appname
        run: |
          case "${{ github.event.inputs.servicename }}" in
            "PointsServer.HttpApi.Host")
              appName="pointsserver-httpapi-host"
              ;;
            "PointsServer.EntityEventHandler")
              appName="pointsserver-entityeventhandler"
              ;;
            "PointsServer.Silo")
              appName="pointsserver-silo"
              ;;
            "PointsServer.AuthServer")
              appName="pointsserver-authserver"
              ;;
            "PointsServer.DbMigrator")
              appName="pointsserver-dbmigrator"
              ;;
            *)
              echo "Unknown service name: ${{ github.event.inputs.servicename }}"
              exit 1
              ;;
          esac
          echo "appName=$appName" >> "$GITHUB_ENV"        

      - name: Deploy
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.TOK }}
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: 'Pixiepoints',
              repo: 'devops',
              workflow_id: 'deployment_testnet.yaml',
              ref: 'main',
              inputs: {
                env: 'testnet',
                appName: process.env.appName,
                commit_sha: 'sha-${{ needs.build-and-push-image.outputs.short_sha }}',
              }
            }) 
            